name: Deploy to AWS
on:
  push:
    paths:
      - 'aws/**'
      - '.github/workflows/deploy.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          environment-file: aws/environment.yml
          activate-environment: aws-trading
          auto-update-conda: true
          conda-remove-defaults: true
          channels: conda-forge

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init & Apply
        working-directory: aws/infra
        shell: bash -l {0}
        run: |
          terraform init
          terraform apply -auto-approve
          
          # Store outputs for later use
          LOGS_BUCKET=$(terraform output -raw logs_bucket)
          EC2_INSTANCE_ID=$(terraform output -raw ec2_instance_id)
          
          echo "LOGS_BUCKET=$LOGS_BUCKET" >> $GITHUB_ENV
          echo "EC2_INSTANCE_ID=$EC2_INSTANCE_ID" >> $GITHUB_ENV
          
      - name: Wait for EC2 instance to complete processing
        run: |
          echo "Waiting for EC2 instance $EC2_INSTANCE_ID to start and run the container..."
          # Wait for the instance to fully initialize (3 minutes)
          sleep 180
          
      - name: Download and display logs
        shell: bash -l {0}
        run: |
          # First, get the log metadata file
          aws s3 cp s3://$LOGS_BUCKET/log_info.txt .
          
          if [ -f "log_info.txt" ]; then
            # Extract log filename
            LOG_FILE=$(grep LOG_FILE log_info.txt | cut -d= -f2)
            
            echo "Downloading log file: $LOG_FILE"
            # Download the actual log file
            aws s3 cp s3://$LOGS_BUCKET/$LOG_FILE .
            
            # Display logs
            echo "-----------------------------------"
            echo "Trading Bot Logs:"
            echo "-----------------------------------"
            cat $LOG_FILE
            echo "-----------------------------------"
            
            # Upload logs as an artifact in GitHub Actions
            mkdir -p logs
            cp $LOG_FILE logs/
            
          else
            echo "Failed to retrieve log information. EC2 instance might still be initializing."
            echo "Check S3 bucket manually: $LOGS_BUCKET"
            
            # List all objects in the bucket anyway
            echo "Listing all objects in the S3 bucket:"
            aws s3 ls s3://$LOGS_BUCKET/
          fi
          
      - name: Archive logs
        uses: actions/upload-artifact@v4
        with:
          name: trading-bot-logs
          path: logs/
          retention-days: 7